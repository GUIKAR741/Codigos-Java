package br.com.guikar.eclusa.view;

import br.com.guikar.eclusa.controller.EmbarcacoesController;
import br.com.guikar.eclusa.model.Eclusa;
import javax.swing.*;
import java.util.ArrayList;

/**
 * @author guilherme
 */
public class EmbarcacoesView extends JFrame {

    private Eclusa model;
    private int index;
    private EmbarcacoesController controller;
    private ButtonGroup tipoEmbarcacao = new ButtonGroup();

    private ButtonGroup sentido = new ButtonGroup();

    private DefaultListModel listaTela = new DefaultListModel();
    private ArrayList lista = new ArrayList();

    public EmbarcacoesView(Eclusa model) {
        initComponents();
        txtNome.setVisible(false);
        lblNome.setVisible(false);
        if (model != null) {
            this.model = model;
        }
        controller = new EmbarcacoesController(this, this.model);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblSentido = new JLabel();
        lblCapitao = new JLabel();
        lblPortoDes = new JLabel();
        lblPortoOri = new JLabel();
        lblCargaMax = new JLabel();
        lblLargura = new JLabel();
        lblComprimento = new JLabel();
        lblEmbarcacao = new JLabel();
        lblContainer = new JLabel();
        lblNome = new JLabel();
        lblPeso = new JLabel();
        lblDia = new JLabel();
        lblMes = new JLabel();
        lblAno = new JLabel();
        txtPeso = new JFormattedTextField();
        txtNome = new JTextField();
        txtCapitao = new JTextField();
        txtPortoDes = new JTextField();
        txtPortoOri = new JTextField();
        txtCargaMax = new JFormattedTextField();
        txtComprimento = new JFormattedTextField();
        txtLargura = new JFormattedTextField();
        spnAno = new JSpinner();
        spnMes = new JSpinner();
        spnDia = new JSpinner();
        jLabel1 = new JLabel();
        radMar = new JRadioButton();
        radRio = new JRadioButton();
        radCarg = new JRadioButton();
        radBalsa = new JRadioButton();
        radLanc = new JRadioButton();
        jScrollPane1 = new JScrollPane();
        listArray = new JList<>();
        btnRm = new JButton();
        btnEdit = new JButton();
        btnAdd = new JButton();
        btnAddEmb = new JButton();

        setDefaultCloseOperation(WindowConstants.DISPOSE_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(620, 470));
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblSentido.setHorizontalAlignment(SwingConstants.CENTER);
        lblSentido.setText("Sentido");
        getContentPane().add(lblSentido, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 300, 150, 30));

        lblCapitao.setHorizontalAlignment(SwingConstants.CENTER);
        lblCapitao.setText("Capitão:");
        getContentPane().add(lblCapitao, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 180, 150, 20));

        lblPortoDes.setHorizontalAlignment(SwingConstants.CENTER);
        lblPortoDes.setText("Porto de Destino:");
        getContentPane().add(lblPortoDes, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 150, 150, 20));

        lblPortoOri.setHorizontalAlignment(SwingConstants.CENTER);
        lblPortoOri.setText("Porto de Origem:");
        getContentPane().add(lblPortoOri, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 120, 150, 20));

        lblCargaMax.setHorizontalAlignment(SwingConstants.CENTER);
        lblCargaMax.setText("Carga Maxima:");
        getContentPane().add(lblCargaMax, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 90, 150, 20));

        lblLargura.setHorizontalAlignment(SwingConstants.CENTER);
        lblLargura.setText("Largura:");
        getContentPane().add(lblLargura, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 30, 150, 20));

        lblComprimento.setHorizontalAlignment(SwingConstants.CENTER);
        lblComprimento.setText("Comprimento:");
        getContentPane().add(lblComprimento, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 60, 150, 20));

        lblEmbarcacao.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        lblEmbarcacao.setText("Embarcacao");
        getContentPane().add(lblEmbarcacao, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, -1, -1));

        lblContainer.setText("Containers");
        getContentPane().add(lblContainer, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 10, -1, -1));

        lblNome.setText("Nome");
        getContentPane().add(lblNome, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 330, 40, 20));

        lblPeso.setText("Peso");
        getContentPane().add(lblPeso, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 300, 40, 20));

        lblDia.setHorizontalAlignment(SwingConstants.CENTER);
        lblDia.setText("Dia:");
        getContentPane().add(lblDia, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 210, 150, 20));

        lblMes.setHorizontalAlignment(SwingConstants.CENTER);
        lblMes.setText("Mês:");
        getContentPane().add(lblMes, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 240, 150, 20));

        lblAno.setHorizontalAlignment(SwingConstants.CENTER);
        lblAno.setText("Ano:");
        getContentPane().add(lblAno, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 270, 150, 20));

        txtPeso.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0.00"))));
        txtPeso.setHorizontalAlignment(JTextField.LEFT);
        getContentPane().add(txtPeso, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 300, 160, 20));

        txtNome.setHorizontalAlignment(JTextField.LEFT);
        getContentPane().add(txtNome, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 330, 160, -1));

        txtCapitao.setHorizontalAlignment(JTextField.LEFT);
        getContentPane().add(txtCapitao, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 180, 210, 20));

        txtPortoDes.setHorizontalAlignment(JTextField.LEFT);
        getContentPane().add(txtPortoDes, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 150, 210, 20));

        txtPortoOri.setHorizontalAlignment(JTextField.LEFT);
        getContentPane().add(txtPortoOri, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 120, 210, 20));

        txtCargaMax.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0.00"))));
        txtCargaMax.setHorizontalAlignment(JTextField.LEFT);
        getContentPane().add(txtCargaMax, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 90, 210, 20));

        txtComprimento.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0.00"))));
        txtComprimento.setHorizontalAlignment(JTextField.LEFT);
        getContentPane().add(txtComprimento, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 60, 210, 20));

        txtLargura.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0.00"))));
        txtLargura.setHorizontalAlignment(JTextField.LEFT);
        getContentPane().add(txtLargura, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 30, 210, 20));

        spnAno.setModel(new SpinnerNumberModel(2018, 2000, 2018, 1));
        spnAno.setPreferredSize(new java.awt.Dimension(14, 23));
        getContentPane().add(spnAno, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 270, 210, 20));

        spnMes.setModel(new SpinnerNumberModel(1, 1, 12, 1));
        getContentPane().add(spnMes, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 240, 210, 20));

        spnDia.setModel(new SpinnerNumberModel(1, 1, 31, 1));
        getContentPane().add(spnDia, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 210, 210, 20));

        jLabel1.setHorizontalAlignment(SwingConstants.CENTER);
        jLabel1.setText("Tipo Embarcação");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 340, 140, 90));

        sentido.add(radMar);
        radMar.setText("Mar - Rio");
        getContentPane().add(radMar, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 300, 100, -1));

        sentido.add(radRio);
        radRio.setSelected(true);
        radRio.setText("Rio - Mar");
        getContentPane().add(radRio, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 300, 100, -1));

        tipoEmbarcacao.add(radCarg);
        radCarg.setSelected(true);
        radCarg.setText("Cargueiro");
        radCarg.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radCargActionPerformed(evt);
            }
        });
        getContentPane().add(radCarg, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 340, 210, -1));

        tipoEmbarcacao.add(radBalsa);
        radBalsa.setText("Balsa");
        radBalsa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radBalsaActionPerformed(evt);
            }
        });
        getContentPane().add(radBalsa, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 370, 210, -1));

        tipoEmbarcacao.add(radLanc);
        radLanc.setText("Lancha");
        radLanc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radLancActionPerformed(evt);
            }
        });
        getContentPane().add(radLanc, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 400, 210, -1));

        listArray.setModel(listaTela);
        jScrollPane1.setViewportView(listArray);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 30, 220, 260));

        btnRm.setText("Remover Container");
        btnRm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRmActionPerformed(evt);
            }
        });
        getContentPane().add(btnRm, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 420, 210, -1));

        btnEdit.setText("Editar Container");
        btnEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditActionPerformed(evt);
            }
        });
        getContentPane().add(btnEdit, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 390, 210, -1));

        btnAdd.setText("Adicionar Container");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });
        getContentPane().add(btnAdd, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 360, 210, -1));

        btnAddEmb.setText("Adicionar Embarcação");
        btnAddEmb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddEmbActionPerformed(evt);
            }
        });
        getContentPane().add(btnAddEmb, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 430, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        controller.acao(evt);
    }//GEN-LAST:event_btnAddActionPerformed

    private void btnAddEmbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddEmbActionPerformed
        controller.acao(evt);
    }//GEN-LAST:event_btnAddEmbActionPerformed

    private void radLancActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radLancActionPerformed
        controller.acao(evt);
    }//GEN-LAST:event_radLancActionPerformed

    private void radCargActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radCargActionPerformed
        controller.acao(evt);
    }//GEN-LAST:event_radCargActionPerformed

    private void radBalsaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radBalsaActionPerformed
        controller.acao(evt);
    }//GEN-LAST:event_radBalsaActionPerformed

    private void btnRmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRmActionPerformed
        controller.acao(evt);
    }//GEN-LAST:event_btnRmActionPerformed

    private void btnEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditActionPerformed
        controller.acao(evt);
    }//GEN-LAST:event_btnEditActionPerformed

    public void setLblNomeVisible(boolean opcao) {
        lblNome.setVisible(opcao);
    }

    public void setTxtNomeVisible(boolean opcao) {
        txtNome.setVisible(opcao);
    }

    public void setLblContainer(String conteudo) {
        this.lblContainer.setText(conteudo);
    }

    public JList getListArray() {
        return listArray;
    }

    public DefaultListModel getListaTela() {
        return listaTela;
    }

    public ArrayList getLista() {
        return lista;
    }

    public String getLblContainer() {
        return lblContainer.getText();
    }

    public String getTxtNome() {
        return txtNome.getText();
    }

    public float getTxtPeso() {
        try {
            return Float.parseFloat(txtPeso.getText().replace(',', '.'));
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Peso deve ser um numero", "Erro", JOptionPane.ERROR_MESSAGE);
            return 0f;
        }
    }

    public void setBtnAdd(String btnAdd) {
        this.btnAdd.setText(btnAdd);
    }

    public void setBtnEdit(String btnEdit) {
        this.btnEdit.setText(btnEdit);
    }

    public void setBtnRm(String btnRm) {
        this.btnRm.setText(btnRm);
    }

    public void setTxtNome(String txtNome) {
        this.txtNome.setText(txtNome);
    }

    public void setTxtPeso(String txtPeso) {
        this.txtPeso.setText(txtPeso.replace('.', ','));
    }

    public float getTxtComprimento() {
        try {
            return Float.parseFloat(txtComprimento.getText().replace(',', '.'));
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Altura deve ser um numero", "Erro", JOptionPane.ERROR_MESSAGE);
            return 0f;
        }
    }

    public String getTxtCapitao() {
        return txtCapitao.getText();
    }

    public float getTxtCargaMax() {
        try {
            return Float.parseFloat(txtCargaMax.getText().replace(',', '.'));
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Carga Maxima deve ser um numero", "Erro", JOptionPane.ERROR_MESSAGE);
            return 0f;
        }
    }

    public float getTxtLargura() {
        try {
            return Float.parseFloat(txtLargura.getText().replace(',', '.'));
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Largura deve ser um numero", "Erro", JOptionPane.ERROR_MESSAGE);
            return 0f;
        }
    }

    public String getTxtPortoDes() {
        return txtPortoDes.getText();
    }

    public String getTxtPortoOri() {
        return txtPortoOri.getText();
    }

    public String getTipoEmbarcacao() {
        if (radCarg.isSelected()) {
            return "Cargueiro";
        } else if (radBalsa.isSelected()) {
            return "Balsa";
        } else {
            return "Lancha";
        }
    }

    public void setTipoEmbarcacao(String tipo) {
        if (tipo.equals("Cargueiro")) {
            radCarg.setSelected(true);
            radBalsa.setSelected(false);
            radLanc.setSelected(false);
        } else if (tipo.equals("Balsa")) {
            radCarg.setSelected(false);
            radBalsa.setSelected(true);
            radLanc.setSelected(false);
        } else {
            radCarg.setSelected(false);
            radBalsa.setSelected(false);
            radLanc.setSelected(true);
        }

    }

    public String getSentido() {
        if (radRio.isSelected()) {
            return "Rio - Mar";
        } else {
            return "Mar - Rio";
        }
    }

    public void setSentido(String sentido) {
        if (sentido.equals("Rio - Mar")) {
            radRio.setSelected(true);
            radMar.setSelected(false);
        } else {
            radRio.setSelected(false);
            radMar.setSelected(true);
        }
    }

    public void setBtnAddEmb(String btnAddEmb) {
        this.btnAddEmb.setText(btnAddEmb);
    }

    public void setTxtCapitao(String txtCapitao) {
        this.txtCapitao.setText(txtCapitao);
    }

    public void setTxtCargaMax(String txtCargaMax) {
        this.txtCargaMax.setText(txtCargaMax.replace('.', ','));
    }

    public void setTxtComprimento(String txtComprimento) {
        this.txtComprimento.setText(txtComprimento.replace('.', ','));
    }

    public void setTxtLargura(String txtLargura) {
        this.txtLargura.setText(txtLargura.replace('.', ','));
    }

    public void setTxtPortoDes(String txtPortoDes) {
        this.txtPortoDes.setText(txtPortoDes);
    }

    public void setTxtPortoOri(String txtPortoOri) {
        this.txtPortoOri.setText(txtPortoOri);
    }

    public void mensagem(String titulo, String mensagem, int tipo) {
        JOptionPane.showMessageDialog(this, mensagem, titulo, tipo);
    }

    public void setIndex(int index) {
        if (index >= 0) {
            this.index = index;
        }
    }

    public int getIndex() {
        return this.index;
    }

    public int getSpnAno() {
        return Integer.parseInt(spnAno.getValue().toString());
    }

    public int getSpnDia() {
        return Integer.parseInt(spnDia.getValue().toString());
    }

    public int getSpnMes() {
        return Integer.parseInt(spnMes.getValue().toString());
    }

    public void setSpnAno(String spnAno) {
        this.spnAno.setValue(Integer.parseInt(spnAno));
    }

    public void setSpnDia(String spnDia) {
        this.spnDia.setValue(Integer.parseInt(spnDia));
    }

    public void setSpnMes(String spnMes) {
        this.spnMes.setValue(Integer.parseInt(spnMes));
    }

    public String getBtnAdd() {
        return btnAdd.getText();
    }

    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private JButton btnAdd;
    private JButton btnAddEmb;
    private JButton btnEdit;
    private JButton btnRm;
    private JLabel jLabel1;
    private JScrollPane jScrollPane1;
    private JLabel lblAno;
    private JLabel lblCapitao;
    private JLabel lblCargaMax;
    private JLabel lblComprimento;
    private JLabel lblContainer;
    private JLabel lblDia;
    private JLabel lblEmbarcacao;
    private JLabel lblLargura;
    private JLabel lblMes;
    private JLabel lblNome;
    private JLabel lblPeso;
    private JLabel lblPortoDes;
    private JLabel lblPortoOri;
    private JLabel lblSentido;
    private JList<String> listArray;
    private JRadioButton radBalsa;
    private JRadioButton radCarg;
    private JRadioButton radLanc;
    private JRadioButton radMar;
    private JRadioButton radRio;
    private JSpinner spnAno;
    private JSpinner spnDia;
    private JSpinner spnMes;
    private JTextField txtCapitao;
    private JFormattedTextField txtCargaMax;
    private JFormattedTextField txtComprimento;
    private JFormattedTextField txtLargura;
    private JTextField txtNome;
    private JFormattedTextField txtPeso;
    private JTextField txtPortoDes;
    private JTextField txtPortoOri;
    // End of variables declaration//GEN-END:variables
}
